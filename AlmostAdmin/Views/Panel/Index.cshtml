@model Project
@{
    ViewData["Title"] = "Index";

    var owner = Model.UserProjects.First().User;
}

<ol>
    <li><a asp-action="Questions">Список вопросов за всё время</a></li>
    <li><a asp-action="Answers">Список ответов за всё время</a></li>
</ol>

<div style="border:dashed">
    <b>Вы можете установить приоритет отправки ответов</b>
    В случае, если Вы хотите получать ответы в режиме онлайн без подтверждения администрацией
    Вы можете активировать опцию "Быстрые ответы", и система сама будет подбирать возможный ответ
    <span style="color:forestgreen">* Ответ на вопрос будет в ожидании подтверждения человеком и если он изменится, ответ будет отправлен на Ваш ресурс повторно!</span>
    @if (!Model.AnswerWithoutApprove)
    {
        <button class="btn btn-success" onclick="activateFastAnswers()">Активировать "Быстрые ответы"</button>
    }
    else
    {
        <button class="btn btn-danger" onclick="deactivateFastAnswers()">Деактивировать "Быстрые ответы"</button>
    }
</div>
<p>
    <h4>Данные для создания запросов на AlmostAdmin API</h4>
    Приватный ключ от проекта: <input class="input-sm" style="width:300px" type="text" disabled="disabled" value="@Model.PrivateKey" />
    <br />Идентификатор проекта: <input class="input-sm" style="width:100px" type="text" disabled="disabled" value="@Model.Id" />
</p>

<div class="center-block btn-group-vertical">

    <div>Сортировка вопросов</div>
    <div class="dropdown">
        <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
            Dropdown Example
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li><a href="#">HTML</a></li>
            <li><a href="#">CSS</a></li>
            <li><a href="#">JavaScript</a></li>
        </ul>
    </div>
</div>

<form onsubmit="createNewQuestion(event)" id="myForm">
    <input name="projectId" type="hidden" value="@Model.Id" />
    <input name="questionText" title="Введите текст вопроса" />
    <button type="submit">Создать</button>
</form>

<div class="container">
    <div class="row" style="border:solid;border-color:red">
        <div class="col-md-5">
                @foreach (var question in Model.Questions)
                {
                    <div class="row" style="border:solid">
                        <div class="col-md-6">
                            <div class="row">
                                <b>Текст вопроса:</b><br />
                                @question.Text
                            </div>
                            <div class="row">
                                <b>Теги вопроса:</b>
                                [
                                @if (question.QuestionTags.Count() > 0)
                                {
                                    @foreach (var tag in question.QuestionTags)
                                    {
                                        <span>@tag.Tag.Text,</span>
                                    }
                                }
                                else
                                {
                                    @: <span style="color:gray">без тегов</span>
                                }
                                ]
                            </div>
                        </div>
                        <div class="col-md-6">
                            @if (question.AnsweredByHuman)
                            {
                                <div class="row">
                                    <span style="width:100%;background-color:forestgreen;text-align:center">Ответил Модератор</span>
                                </div>
                                <div class="row">
                                    <b>Текст ответа:</b><br />
                                    @question.Answer.Text
                                </div>
                                <div class="row">
                                    <button class="btn btn-default" onclick="answerOnQuestion(@question.Id)">
                                        Изменить ответ
                                    </button>
                                </div>
                                // TODO: тут предлагать выбор из возможных похожих вопросов и ответов к ним
                            }
                            else if (question.Answer != null)
                            {
                                <span>
                                    (Система): @question.Answer.Text
                                    <button onclick="answerOnQuestion(@question.Id)">
                                        Изменить ответ
                                    </button>
                                    // TODO: тут предлагать выбор из возможных похожих вопросов и ответов к ним
                                </span>
                            }
                            else
                            {
                                <span>
                                    Этот вопрос еще без ответа!
                                    <button onclick="answerOnQuestion(@question.Id)">
                                        Ответить
                                    </button>
                                    // TODO: тут предлагать выбор из возможных похожих вопросов и ответов к ним
                                </span>
                            }
                        </div>
                    </div>
                }
        </div>

        <div class="col-md-3">
            Участники проекта
            @if (owner.Email.Equals(User.Identity.Name))
            {
                <button class="btn btn-default" onclick="inviteNewUsers(@Model.Id)">Пригласить</button>
                <button class="btn btn-default" onclick="usersStats(@Model.Id)">Статистика</button>
            }
            @Html.Partial("_ProjectUsers", Model.UserProjects.Select(up => up.User))
        </div>
        <div class="col-md-4">
            <div id="container" style="min-width: 310px; max-width: 800px; height: 400px; margin: 0 auto"></div>
            @*@Html.Partial("_UsersStatistic", Model.UserProjects.Select(up => up.User))*@
        </div>
    </div>
</div>


<div id="prompt-form-container">
    <form id="prompt-form">
        <div id="prompt-message"></div>
        <input name="text" type="text">
        <input type="submit" value="Ответить">
        <input type="button" name="cancel" value="Отмена">
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <!--
    <script type="text/javascript" src="~/lib/highchartsjs/js/highcharts.js"></script>
    <script type="text/javascript" src="~/lib/highchartsjs/js/modules/exporting.js"></script>
        -->
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script>

        @{
            var users = Model.UserProjects.Select(up => up.User.UserName);
            var answers = Model.UserProjects.Select(up => up.User.Answers.Count());

            var dictionary = users.Zip(answers, (k, v) => new { k, v } )
              .ToDictionary(x => x.k, x => x.v);
        }

        var usersList = [];
        var answersList = [];

        @foreach(var kvp in dictionary)
        {
            @: usersList.push('@kvp.Key');
            @: answersList.push(@kvp.Value);
        }
        
        console.log(usersList);
        console.log(answersList);


        Highcharts.chart('container', {
            chart: {
                type: 'bar'
            },
            title: {
                text: 'Активность участников проекта'
            },
            xAxis: {
                categories: usersList
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Количество отвеченных вопросов'
                }
            },
            legend: {
                reversed: true
            },
            plotOptions: {
                series: {
                    stacking: 'normal'
                }
            },
            series: [{
                name: 'Ответы',
                data: answersList
            }]
            //}, {
            //    name: 'Jane',
            //    data: [2, 2, 3, 2, 1]
            //}, {
            //    name: 'Joe',
            //    data: [3, 4, 4, 2, 5]
            //}]
        });

    function activateFastAnswers() {
        $.post('@Url.Action("ActivateFastAnswers")',
                {
                    projectId: @Model.Id
                },
                function (response) {
                    if (!response.success) {
                        alert(response.message);
                        return;
                    }

                    alert("Функция активирована!");
                    window.location = window.location;
                });
    }
    function deactivateFastAnswers() {
        $.post('@Url.Action("DeactivateFastAnswers")',
                {
                    projectId: @Model.Id
                },
                function (response) {
                    if (!response.success) {
                        alert(response.message);
                        return;
                    }

                    alert("Функция активирована!");
                    window.location = window.location;
                });
    }

    function inviteNewUsers(projectId) {
        showPrompt("Введите почту:", function (emailToInvite) {
            $.post('@Url.Action("InviteUser")',
                {
                    projectId: projectId,
                    emailToInvite: emailToInvite
                },
                function (response) {
                    if (!response.success) {
                        alert(response.message);
                        return;
                    }

                    alert("Пользователь успешно добавлен в проект!");
                    window.location = window.location;
                });
        });
    }

    function createNewQuestion(event) {
        event.preventDefault();

        $.post('@Url.Action("CreateQuestion")', $('#myForm').serialize(),
            function () {
                window.location = window.location;
        });
    }

    // TODO: move this function to global js file
    function answerOnQuestion(questionId) {
        showPrompt("Введите ответ на вопрос:", function (value) {
            $.post('@Url.Action("Answer")',
                {
                    projectId: @Model.Id,
                    questionId: questionId,
                    answerText: value
                },
                function (response) {
                    // TODO: make ajax updated table
                    window.location = window.location;
                });
        });
    }
    </script>
}
<!--
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
    Launch demo modal
</button>

 Modal
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div> -->
